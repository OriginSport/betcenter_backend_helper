#coding=utf-8

# INNER ERROR CODE in range (10000, 19999)
ERROR_CODE_DATABASE_CONN_ERROR = 10000
ERROR_CODE_DATABASE_INSERT_ERROR = 10001
ERROR_CODE_DATABASE_QUERY_ERROR = 10002
ERROR_CODE_DATABASE_DELETE_ERROR = 10003
ERROR_CODE_DATABASE_ACCESS_ERROR = 10004
ERROR_CODE_DATABASE_NOT_EXIST_ERROR = 10005


# Client ERROR CODE in range (20000, 29999)
ERROR_CODE_UNAUTHORIZED = 20000
ERROR_CODE_INVALID_ARGS = 20001
ERROR_CODE_UNDEFINED = 20002
ERROR_CODE_USER_IN_BLACKLIST = 20003

# APP ERROR CODE
ERROR_CODE_USER_HAS_BEEN_JOIN_CONTEST = 30001
ERROR_CODE_CONTEST_IS_FULL = 30002
ERROR_CODE_USER_KUBI_INSUFFICIENT = 30003
ERROR_CODE_USER_CHOICE_OVER_SALARY_CAP= 30004
ERROR_CODE_USER_PROP_IS_INVALID = 30005
ERROR_CODE_USER_HAS_FIRST_CHARGED = 30011
ERROR_CODE_USER_CREATE_CONTEST_SPAM = 30006
ERROR_CODE_CONTEST_IS_NOT_ALLOW_JOIN = 30007
ERROR_CODE_CONTEST_IS_NOT_ALLOW_UPDATE = 30008
ERROR_CODE_CONTEST_NOT_ALLOW_JOIN_NEWBIE_PROTECT = 30009
ERROR_CODE_ACTIVITY_REDEEM_CODE_IS_INVALID = 30030
ERROR_CODE_ACTIVITY_REDEEM_CODE_IS_USED = 30031
ERROR_CODE_PPL_NUMBER_IS_BUYED = 30040
ERROR_CODE_PPL_NUMBER_IS_INVALID = 30041
ERROR_CODE_PPL_USER_BUYED_LIMIT = 30042
ERROR_CODE_PPL_USER_CANNOT_BUY = 30043

# SLOT LVLUP
ERROR_CODE_SLOT_LVLUP_LACK_COUNT = 30101
ERROR_CODE_SLOT_LVLUP_CATEGORY_NOT_MATCH = 30102

# PLAYERCARD
ERROR_CODE_USER_PLAYERCARD_NOT_ENOUGH = 30201
ERROR_CODE_USER_PLAYERCARD_DECREASE_ERROR = 30202

# PK
ERROR_CODE_PK_USER_NO_LINEUP = 30300
ERROR_CODE_PK_COMPETITOR_NO_LINEUP = 30301
ERROR_CODE_PK_USER_HEALTH_POINT_NOT_ENOUGH = 30302
ERROR_CODE_PK_COMPETITOR_HEALTH_POINT_NOT_ENOUGH = 30303
ERROR_CODE_HEALTH_POINT_EXCEED_LIMIT = 30304

# User LOGIC ERROR CODE in range (40000, 49999)
ERROR_CODE_USERNAME_EXIST = 40000
ERROR_CODE_EMAIL_EXIST = 40001
ERROR_CODE_USERNAME_OR_EMAIL_EXIST = 40002
ERROR_CODE_INVALID_USERNAME = 40003
ERROR_CODE_INVALID_EMAIL = 40004
ERROR_CODE_EMAIL_IS_VERIFIED = 40005
ERROR_CODE_EMAIL_VERIFY_FAILED = 40006
ERROR_CODE_LOGIN_REQUIRED = 40007
ERROR_CODE_SEND_SMS_SPAM = 40008


# User Raffle ERROR CODE
ERROR_CODE_RAFFLE_TIMES_LIMIT = 40301
ERROR_CODE_RAFFLE_TIMES_EXCEED_LIMIT = 40302
ERROR_CODE_DIAMOND_NOT_ENOUGH = 40303

# SYSTEM ERROR CODE
ERROR_CODE_SALARY_REFRESH = 50001

_error_map = {ERROR_CODE_DATABASE_CONN_ERROR: "%s: database can not be connection." % ERROR_CODE_DATABASE_CONN_ERROR,
              ERROR_CODE_DATABASE_INSERT_ERROR: "%s: An error occurred while inserting data to the database." % ERROR_CODE_DATABASE_INSERT_ERROR,
              ERROR_CODE_DATABASE_QUERY_ERROR: "%s: An error occurred while querying data from the database." % ERROR_CODE_DATABASE_QUERY_ERROR ,
              ERROR_CODE_DATABASE_NOT_EXIST_ERROR: "%s: Query item not exist." % ERROR_CODE_DATABASE_NOT_EXIST_ERROR,
              ERROR_CODE_UNAUTHORIZED: "%s: The request is not authorized." % ERROR_CODE_UNAUTHORIZED,
              ERROR_CODE_INVALID_ARGS: "%s: The arguments is invalid." % ERROR_CODE_INVALID_ARGS,
              ERROR_CODE_USER_IN_BLACKLIST: "%s: User in blacklist." % ERROR_CODE_USER_IN_BLACKLIST,

              ERROR_CODE_USERNAME_EXIST: "%s: username is exist." % ERROR_CODE_USERNAME_EXIST,
              ERROR_CODE_EMAIL_EXIST: "%s: email is exist." % ERROR_CODE_EMAIL_EXIST,
              ERROR_CODE_USERNAME_OR_EMAIL_EXIST: "%s: username or email is exist." % ERROR_CODE_USERNAME_OR_EMAIL_EXIST,
              ERROR_CODE_INVALID_USERNAME: "%s: username is invalid." % ERROR_CODE_INVALID_USERNAME,
              ERROR_CODE_INVALID_EMAIL: "%s: email is invalid." % ERROR_CODE_INVALID_EMAIL,
              ERROR_CODE_EMAIL_IS_VERIFIED: "%s: email is verified." % ERROR_CODE_EMAIL_IS_VERIFIED,
              ERROR_CODE_EMAIL_VERIFY_FAILED: "%s: email verify failed." % ERROR_CODE_EMAIL_VERIFY_FAILED,
              ERROR_CODE_LOGIN_REQUIRED: "%s: login required." % ERROR_CODE_LOGIN_REQUIRED,
              ERROR_CODE_SEND_SMS_SPAM: "%s: send sms spam." % ERROR_CODE_SEND_SMS_SPAM,
              ERROR_CODE_USER_HAS_BEEN_JOIN_CONTEST: "%s: has joined the contest." % ERROR_CODE_USER_HAS_BEEN_JOIN_CONTEST,
              ERROR_CODE_CONTEST_IS_FULL: "%s: contest is full." % ERROR_CODE_CONTEST_IS_FULL,
              ERROR_CODE_USER_KUBI_INSUFFICIENT: "%s: user kubi insufficient." % ERROR_CODE_USER_KUBI_INSUFFICIENT,
              ERROR_CODE_USER_CHOICE_OVER_SALARY_CAP: "%s: user choices is over salary cap." % ERROR_CODE_USER_CHOICE_OVER_SALARY_CAP,
              ERROR_CODE_USER_PROP_IS_INVALID: "%s: user prop is invalid." % ERROR_CODE_USER_PROP_IS_INVALID,
              ERROR_CODE_USER_CREATE_CONTEST_SPAM: "%s: create contest spam." % ERROR_CODE_USER_CREATE_CONTEST_SPAM,
              ERROR_CODE_SALARY_REFRESH: "%s: system is in maintenance, salary is refreshing." % ERROR_CODE_SALARY_REFRESH,
              }



def get_error_desp(code):
    """
    获取错误描述
    """
    return _error_map.get(code, "unknown error code")


